/* Import Tailwind's base styles, components, and utilities */
@tailwind base;
@tailwind components;
@tailwind utilities;

/*
  You can still use @layer components to define reusable component styles
  using @apply with Tailwind classes (which now include your custom colors).
*/
@layer components {
  .btn {
    @apply px-4 py-2 rounded-lg font-medium; /* Base button styling */
  }
  .btn-primary {
    @apply bg-primary text-white; /* Uses 'primary' color from tailwind.config.js */
    /* Add hover/focus/active states if needed, e.g., @apply hover:bg-primary-dark; */
  }
  .btn-secondary {
    @apply bg-secondary text-white; /* Uses 'secondary' color from tailwind.config.js */
  }
  .btn-success {
    @apply bg-success text-white; /* Uses 'success' color from tailwind.config.js */
  }
  .btn-error {
    @apply bg-error text-white; /* Uses 'error' color from tailwind.config.js */
  }

  .card {
    /* Using Tailwind's default grays or your theme's gray overrides for dark mode */
    @apply bg-white dark:bg-gray-800 rounded-xl shadow-sm;
  }
}

/*
  Global element styling (can often be handled by Tailwind base or by styling App.js/Layout directly).
  If you need broad defaults, this is the place.
*/
body {
  /* On web, this applies. In React Native, it's more conceptual for NativeWind. */
  @apply bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-white;
  /* If you defined a default font in tailwind.config.js, you might @apply it here: */
  /* @apply font-sans; */
}

/* Default styling for form elements */
input,
textarea,
select {
  /* Using Tailwind's default grays or your theme's gray overrides for dark mode */
  @apply bg-gray-100 dark:bg-gray-700 rounded-lg px-4 py-2 w-full;
  /* Consider adding text color for inputs, e.g., text-gray-900 dark:text-white */
  @apply text-gray-900 dark:text-white;
}

/* Visible focus states for form elements and buttons */
button:focus, /* For web */
input:focus,
select:focus,
textarea:focus {
  @apply outline-none ring-2 ring-primary ring-opacity-50; /* Uses 'primary' from tailwind.config.js */
}

/*
  Any other truly global base styles or very specific overrides can go here,
  but try to use Tailwind utilities directly in your components as much as possible.
*/
